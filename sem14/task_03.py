# üìå –ù–∞–ø–∏—à–∏—Ç–µ –¥–ª—è –∑–∞–¥–∞—á–∏ 1 —Ç–µ—Å—Ç—ã unittest. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–∏–º–≤–æ–ª–æ–≤
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∑–Ω–∞–∫–æ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –±—É–∫–≤ –¥—Ä—É–≥–∏—Ö –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (–∫—Ä–æ–º–µ –ø. 1)

from string import ascii_letters
import unittest


def delete_char(text):
    return ("".join(i for i in text if i in ascii_letters + ' ')).lower()


class TestFilterLower(unittest.TestCase):
    def test_return_no_change(self):
        self.assertEqual(delete_char('hello py'), 'hello py', msg='All right')

    def test_return_lower(self):
        self.assertEqual(delete_char('Hello Py'), 'hello py', msg='All right')

    def test_punctuation(self):
        self.assertEqual(delete_char('hello!,. py!'), 'hello py', msg='All right')

    def test_other_char(self):
        self.assertEqual(delete_char('–±hello5 py–∞'), 'hello py', msg='All right')

    def test_all_mistakes(self):
        self.assertEqual(delete_char('–±He!llo5 Py–∞!'), 'hello py', msg='All right')


if __name__ == '__main__':
    # s = 'It15 is true55, I ha–ë,ve no memory–≤–∞–≤–∞ of my acc–±–±–±ident.'
    # print(delete_char(s))
    unittest.main()
