# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.


from sem10.task_02 import Rectangle


class RectanglePro(Rectangle):

    def __add__(self, other):
        sum_of_perimeter = self.perimeter() + other.perimeter()
        side_a = self.side_a + other.side_a
        side_b = sum_of_perimeter / 2 - side_a
        return RectanglePro(side_a, side_b)

    def __sub__(self, other):
        # if self.perimeter() < other.perimeter():
        #     self, other = other, self
        diff = abs(self.perimeter() - other.perimeter())
        side_a = abs(self.side_a - other.side_a)
        side_b = diff / 2 - side_a
        return RectanglePro(side_a, side_b)


# p1 = Rectangle(2, 3)
# p2 = Rectangle(5)
# print(f'–ü–µ—Ä–∏–º–µ—Ç—Ä = {p1.perimeter()}, –ü–ª–æ—â–∞–¥—å = {p1.area()}')
# print(f'–ü–µ—Ä–∏–º–µ—Ç—Ä = {p2.perimeter()}, –ü–ª–æ—â–∞–¥—å = {p2.area()}')

rect_1 = RectanglePro(2, 3)
rect_2 = RectanglePro(5)


print(rect_1.perimeter())
print(rect_2.perimeter())
rect_sum = rect_1 + rect_2
print(rect_sum.perimeter())
print(rect_sum.side_a, rect_sum.side_b)
rect_dif = rect_1 - rect_2
print(rect_dif.perimeter())
print(rect_dif.side_a, rect_dif.side_b)
